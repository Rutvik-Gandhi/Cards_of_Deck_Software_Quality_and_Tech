{
	"info": {
		"_postman_id": "ba9ebf62-3aa6-483a-8230-a31eeb47c0ab",
		"name": "RutvikGandhiFinalExam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25672691"
	},
	"item": [
		{
			"name": "Shuffle the Cards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Cards are shuffled successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.json().shuffled).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1",
					"protocol": "https",
					"host": [
						"deckofcardsapi",
						"com"
					],
					"path": [
						"api",
						"deck",
						"new",
						"shuffle",
						""
					],
					"query": [
						{
							"key": "deck_count",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Draw a card from the deck",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Card is drawn successuccessfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.json().success).to.be.true;\r",
							"    pm.expect(pm.response.json().cards).to.be.an('array').that.has.lengthOf(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://deckofcardsapi.com/api/deck/new/draw/?count=2",
					"protocol": "https",
					"host": [
						"deckofcardsapi",
						"com"
					],
					"path": [
						"api",
						"deck",
						"new",
						"draw",
						""
					],
					"query": [
						{
							"key": "count",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Reshuffle the card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deck is reshuffled successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.json().shuffled).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://deckofcardsapi.com/api/deck/new/shuffle",
					"protocol": "https",
					"host": [
						"deckofcardsapi",
						"com"
					],
					"path": [
						"api",
						"deck",
						"new",
						"shuffle"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add 2 Jokers in a Deck.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Deck has 54 cards\", function () {\r",
							"    pm.expect(pm.response.json().remaining).to.eql(54);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://deckofcardsapi.com/api/deck/new/?jokers_enabled=true",
					"protocol": "https",
					"host": [
						"deckofcardsapi",
						"com"
					],
					"path": [
						"api",
						"deck",
						"new",
						""
					],
					"query": [
						{
							"key": "jokers_enabled",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a Partial Deck that consist all the aces, twos, and kings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest('https://deckofcardsapi.com/api/deck/new/shuffle/?cards=AS,2S,KS,AD,2D,KD,AC,2C,KC,AH,2H,KH', function (err, res){\r",
							"\r",
							"    pm.test(\"Partial deck is created\", function () {\r",
							"        pm.expect(res.json().remaining).to.equal(12);\r",
							"    });\r",
							"\r",
							"   \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://deckofcardsapi.com/api/deck/new/shuffle/?cards=AS,2S,KS,AD,2D,KD,AC,2C,KC,AH,2H,KH",
					"protocol": "https",
					"host": [
						"deckofcardsapi",
						"com"
					],
					"path": [
						"api",
						"deck",
						"new",
						"shuffle",
						""
					],
					"query": [
						{
							"key": "cards",
							"value": "AS,2S,KS,AD,2D,KD,AC,2C,KC,AH,2H,KH"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Draw a Card from an invalid deck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://deckofcardsapi.com/api/deck/False_deckID/draw/?count=1",
					"protocol": "https",
					"host": [
						"deckofcardsapi",
						"com"
					],
					"path": [
						"api",
						"deck",
						"False_deckID",
						"draw",
						""
					],
					"query": [
						{
							"key": "count",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}